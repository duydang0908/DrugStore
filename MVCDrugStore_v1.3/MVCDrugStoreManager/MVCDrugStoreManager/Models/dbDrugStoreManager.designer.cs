#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MVCDrugStoreManager.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="PhanPhoiThuoc")]
	public partial class dbDrugStoreManagerDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCHI_TIET_DON_DAT_HANG(CHI_TIET_DON_DAT_HANG instance);
    partial void UpdateCHI_TIET_DON_DAT_HANG(CHI_TIET_DON_DAT_HANG instance);
    partial void DeleteCHI_TIET_DON_DAT_HANG(CHI_TIET_DON_DAT_HANG instance);
    partial void InsertSAN_PHAM(SAN_PHAM instance);
    partial void UpdateSAN_PHAM(SAN_PHAM instance);
    partial void DeleteSAN_PHAM(SAN_PHAM instance);
    partial void InsertCHI_TIET_PHIEU_GIAO_HANG(CHI_TIET_PHIEU_GIAO_HANG instance);
    partial void UpdateCHI_TIET_PHIEU_GIAO_HANG(CHI_TIET_PHIEU_GIAO_HANG instance);
    partial void DeleteCHI_TIET_PHIEU_GIAO_HANG(CHI_TIET_PHIEU_GIAO_HANG instance);
    partial void InsertCT_HOA_DON(CT_HOA_DON instance);
    partial void UpdateCT_HOA_DON(CT_HOA_DON instance);
    partial void DeleteCT_HOA_DON(CT_HOA_DON instance);
    partial void InsertDangNhap(DangNhap instance);
    partial void UpdateDangNhap(DangNhap instance);
    partial void DeleteDangNhap(DangNhap instance);
    partial void InsertDON_DAT_HANG(DON_DAT_HANG instance);
    partial void UpdateDON_DAT_HANG(DON_DAT_HANG instance);
    partial void DeleteDON_DAT_HANG(DON_DAT_HANG instance);
    partial void InsertDVT(DVT instance);
    partial void UpdateDVT(DVT instance);
    partial void DeleteDVT(DVT instance);
    partial void InsertHOA_DON(HOA_DON instance);
    partial void UpdateHOA_DON(HOA_DON instance);
    partial void DeleteHOA_DON(HOA_DON instance);
    partial void InsertKHACH_HANG(KHACH_HANG instance);
    partial void UpdateKHACH_HANG(KHACH_HANG instance);
    partial void DeleteKHACH_HANG(KHACH_HANG instance);
    partial void InsertLOAI_NV(LOAI_NV instance);
    partial void UpdateLOAI_NV(LOAI_NV instance);
    partial void DeleteLOAI_NV(LOAI_NV instance);
    partial void InsertLOAI_SAN_PHAM(LOAI_SAN_PHAM instance);
    partial void UpdateLOAI_SAN_PHAM(LOAI_SAN_PHAM instance);
    partial void DeleteLOAI_SAN_PHAM(LOAI_SAN_PHAM instance);
    partial void InsertNHAN_VIEN(NHAN_VIEN instance);
    partial void UpdateNHAN_VIEN(NHAN_VIEN instance);
    partial void DeleteNHAN_VIEN(NHAN_VIEN instance);
    partial void InsertPHIEU_GIAO_HANG(PHIEU_GIAO_HANG instance);
    partial void UpdatePHIEU_GIAO_HANG(PHIEU_GIAO_HANG instance);
    partial void DeletePHIEU_GIAO_HANG(PHIEU_GIAO_HANG instance);
    #endregion
		
		public dbDrugStoreManagerDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["PhanPhoiThuocConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public dbDrugStoreManagerDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbDrugStoreManagerDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbDrugStoreManagerDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbDrugStoreManagerDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CHI_TIET_DON_DAT_HANG> CHI_TIET_DON_DAT_HANGs
		{
			get
			{
				return this.GetTable<CHI_TIET_DON_DAT_HANG>();
			}
		}
		
		public System.Data.Linq.Table<SAN_PHAM> SAN_PHAMs
		{
			get
			{
				return this.GetTable<SAN_PHAM>();
			}
		}
		
		public System.Data.Linq.Table<CHI_TIET_PHIEU_GIAO_HANG> CHI_TIET_PHIEU_GIAO_HANGs
		{
			get
			{
				return this.GetTable<CHI_TIET_PHIEU_GIAO_HANG>();
			}
		}
		
		public System.Data.Linq.Table<CT_HOA_DON> CT_HOA_DONs
		{
			get
			{
				return this.GetTable<CT_HOA_DON>();
			}
		}
		
		public System.Data.Linq.Table<DangNhap> DangNhaps
		{
			get
			{
				return this.GetTable<DangNhap>();
			}
		}
		
		public System.Data.Linq.Table<DON_DAT_HANG> DON_DAT_HANGs
		{
			get
			{
				return this.GetTable<DON_DAT_HANG>();
			}
		}
		
		public System.Data.Linq.Table<DVT> DVTs
		{
			get
			{
				return this.GetTable<DVT>();
			}
		}
		
		public System.Data.Linq.Table<HOA_DON> HOA_DONs
		{
			get
			{
				return this.GetTable<HOA_DON>();
			}
		}
		
		public System.Data.Linq.Table<KHACH_HANG> KHACH_HANGs
		{
			get
			{
				return this.GetTable<KHACH_HANG>();
			}
		}
		
		public System.Data.Linq.Table<LOAI_NV> LOAI_NVs
		{
			get
			{
				return this.GetTable<LOAI_NV>();
			}
		}
		
		public System.Data.Linq.Table<LOAI_SAN_PHAM> LOAI_SAN_PHAMs
		{
			get
			{
				return this.GetTable<LOAI_SAN_PHAM>();
			}
		}
		
		public System.Data.Linq.Table<NHAN_VIEN> NHAN_VIENs
		{
			get
			{
				return this.GetTable<NHAN_VIEN>();
			}
		}
		
		public System.Data.Linq.Table<PHIEU_GIAO_HANG> PHIEU_GIAO_HANGs
		{
			get
			{
				return this.GetTable<PHIEU_GIAO_HANG>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHI_TIET_DON_DAT_HANG")]
	public partial class CHI_TIET_DON_DAT_HANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaDDH;
		
		private int _MaSP;
		
		private System.Nullable<int> _DVT;
		
		private System.Nullable<int> _SoLuong;
		
		private System.Nullable<decimal> _DonGia;
		
		private EntityRef<SAN_PHAM> _SAN_PHAM;
		
		private EntityRef<DON_DAT_HANG> _DON_DAT_HANG;
		
		private EntityRef<DVT> _DVT1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDDHChanging(int value);
    partial void OnMaDDHChanged();
    partial void OnMaSPChanging(int value);
    partial void OnMaSPChanged();
    partial void OnDVTChanging(System.Nullable<int> value);
    partial void OnDVTChanged();
    partial void OnSoLuongChanging(System.Nullable<int> value);
    partial void OnSoLuongChanged();
    partial void OnDonGiaChanging(System.Nullable<decimal> value);
    partial void OnDonGiaChanged();
    #endregion
		
		public CHI_TIET_DON_DAT_HANG()
		{
			this._SAN_PHAM = default(EntityRef<SAN_PHAM>);
			this._DON_DAT_HANG = default(EntityRef<DON_DAT_HANG>);
			this._DVT1 = default(EntityRef<DVT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDDH", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaDDH
		{
			get
			{
				return this._MaDDH;
			}
			set
			{
				if ((this._MaDDH != value))
				{
					if (this._DON_DAT_HANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDDHChanging(value);
					this.SendPropertyChanging();
					this._MaDDH = value;
					this.SendPropertyChanged("MaDDH");
					this.OnMaDDHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSP", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaSP
		{
			get
			{
				return this._MaSP;
			}
			set
			{
				if ((this._MaSP != value))
				{
					if (this._SAN_PHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSPChanging(value);
					this.SendPropertyChanging();
					this._MaSP = value;
					this.SendPropertyChanged("MaSP");
					this.OnMaSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DVT", DbType="Int")]
		public System.Nullable<int> DVT
		{
			get
			{
				return this._DVT;
			}
			set
			{
				if ((this._DVT != value))
				{
					if (this._DVT1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDVTChanging(value);
					this.SendPropertyChanging();
					this._DVT = value;
					this.SendPropertyChanged("DVT");
					this.OnDVTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int")]
		public System.Nullable<int> SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonGia", DbType="Money")]
		public System.Nullable<decimal> DonGia
		{
			get
			{
				return this._DonGia;
			}
			set
			{
				if ((this._DonGia != value))
				{
					this.OnDonGiaChanging(value);
					this.SendPropertyChanging();
					this._DonGia = value;
					this.SendPropertyChanged("DonGia");
					this.OnDonGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SAN_PHAM_CHI_TIET_DON_DAT_HANG", Storage="_SAN_PHAM", ThisKey="MaSP", OtherKey="MaSP", IsForeignKey=true)]
		public SAN_PHAM SAN_PHAM
		{
			get
			{
				return this._SAN_PHAM.Entity;
			}
			set
			{
				SAN_PHAM previousValue = this._SAN_PHAM.Entity;
				if (((previousValue != value) 
							|| (this._SAN_PHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SAN_PHAM.Entity = null;
						previousValue.CHI_TIET_DON_DAT_HANGs.Remove(this);
					}
					this._SAN_PHAM.Entity = value;
					if ((value != null))
					{
						value.CHI_TIET_DON_DAT_HANGs.Add(this);
						this._MaSP = value.MaSP;
					}
					else
					{
						this._MaSP = default(int);
					}
					this.SendPropertyChanged("SAN_PHAM");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DON_DAT_HANG_CHI_TIET_DON_DAT_HANG", Storage="_DON_DAT_HANG", ThisKey="MaDDH", OtherKey="MaDDH", IsForeignKey=true)]
		public DON_DAT_HANG DON_DAT_HANG
		{
			get
			{
				return this._DON_DAT_HANG.Entity;
			}
			set
			{
				DON_DAT_HANG previousValue = this._DON_DAT_HANG.Entity;
				if (((previousValue != value) 
							|| (this._DON_DAT_HANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DON_DAT_HANG.Entity = null;
						previousValue.CHI_TIET_DON_DAT_HANGs.Remove(this);
					}
					this._DON_DAT_HANG.Entity = value;
					if ((value != null))
					{
						value.CHI_TIET_DON_DAT_HANGs.Add(this);
						this._MaDDH = value.MaDDH;
					}
					else
					{
						this._MaDDH = default(int);
					}
					this.SendPropertyChanged("DON_DAT_HANG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DVT_CHI_TIET_DON_DAT_HANG", Storage="_DVT1", ThisKey="DVT", OtherKey="MaDVT", IsForeignKey=true)]
		public DVT DVT1
		{
			get
			{
				return this._DVT1.Entity;
			}
			set
			{
				DVT previousValue = this._DVT1.Entity;
				if (((previousValue != value) 
							|| (this._DVT1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DVT1.Entity = null;
						previousValue.CHI_TIET_DON_DAT_HANGs.Remove(this);
					}
					this._DVT1.Entity = value;
					if ((value != null))
					{
						value.CHI_TIET_DON_DAT_HANGs.Add(this);
						this._DVT = value.MaDVT;
					}
					else
					{
						this._DVT = default(Nullable<int>);
					}
					this.SendPropertyChanged("DVT1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SAN_PHAM")]
	public partial class SAN_PHAM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaSP;
		
		private string _TenSP;
		
		private System.Nullable<int> _MaLoaiSP;
		
		private System.Nullable<int> _DVT;
		
		private System.Nullable<int> _SoLuongTon;
		
		private System.Nullable<decimal> _DonGia;
		
		private System.Nullable<System.DateTime> _NgayCapNhat;
		
		private string _MoTa;
		
		private string _Images;
		
		private EntitySet<CHI_TIET_DON_DAT_HANG> _CHI_TIET_DON_DAT_HANGs;
		
		private EntitySet<CHI_TIET_PHIEU_GIAO_HANG> _CHI_TIET_PHIEU_GIAO_HANGs;
		
		private EntitySet<CT_HOA_DON> _CT_HOA_DONs;
		
		private EntityRef<DVT> _DVT1;
		
		private EntityRef<LOAI_SAN_PHAM> _LOAI_SAN_PHAM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaSPChanging(int value);
    partial void OnMaSPChanged();
    partial void OnTenSPChanging(string value);
    partial void OnTenSPChanged();
    partial void OnMaLoaiSPChanging(System.Nullable<int> value);
    partial void OnMaLoaiSPChanged();
    partial void OnDVTChanging(System.Nullable<int> value);
    partial void OnDVTChanged();
    partial void OnSoLuongTonChanging(System.Nullable<int> value);
    partial void OnSoLuongTonChanged();
    partial void OnDonGiaChanging(System.Nullable<decimal> value);
    partial void OnDonGiaChanged();
    partial void OnNgayCapNhatChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayCapNhatChanged();
    partial void OnMoTaChanging(string value);
    partial void OnMoTaChanged();
    partial void OnImagesChanging(string value);
    partial void OnImagesChanged();
    #endregion
		
		public SAN_PHAM()
		{
			this._CHI_TIET_DON_DAT_HANGs = new EntitySet<CHI_TIET_DON_DAT_HANG>(new Action<CHI_TIET_DON_DAT_HANG>(this.attach_CHI_TIET_DON_DAT_HANGs), new Action<CHI_TIET_DON_DAT_HANG>(this.detach_CHI_TIET_DON_DAT_HANGs));
			this._CHI_TIET_PHIEU_GIAO_HANGs = new EntitySet<CHI_TIET_PHIEU_GIAO_HANG>(new Action<CHI_TIET_PHIEU_GIAO_HANG>(this.attach_CHI_TIET_PHIEU_GIAO_HANGs), new Action<CHI_TIET_PHIEU_GIAO_HANG>(this.detach_CHI_TIET_PHIEU_GIAO_HANGs));
			this._CT_HOA_DONs = new EntitySet<CT_HOA_DON>(new Action<CT_HOA_DON>(this.attach_CT_HOA_DONs), new Action<CT_HOA_DON>(this.detach_CT_HOA_DONs));
			this._DVT1 = default(EntityRef<DVT>);
			this._LOAI_SAN_PHAM = default(EntityRef<LOAI_SAN_PHAM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSP", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaSP
		{
			get
			{
				return this._MaSP;
			}
			set
			{
				if ((this._MaSP != value))
				{
					this.OnMaSPChanging(value);
					this.SendPropertyChanging();
					this._MaSP = value;
					this.SendPropertyChanged("MaSP");
					this.OnMaSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenSP", DbType="NVarChar(50)")]
		public string TenSP
		{
			get
			{
				return this._TenSP;
			}
			set
			{
				if ((this._TenSP != value))
				{
					this.OnTenSPChanging(value);
					this.SendPropertyChanging();
					this._TenSP = value;
					this.SendPropertyChanged("TenSP");
					this.OnTenSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoaiSP", DbType="Int")]
		public System.Nullable<int> MaLoaiSP
		{
			get
			{
				return this._MaLoaiSP;
			}
			set
			{
				if ((this._MaLoaiSP != value))
				{
					if (this._LOAI_SAN_PHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLoaiSPChanging(value);
					this.SendPropertyChanging();
					this._MaLoaiSP = value;
					this.SendPropertyChanged("MaLoaiSP");
					this.OnMaLoaiSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DVT", DbType="Int")]
		public System.Nullable<int> DVT
		{
			get
			{
				return this._DVT;
			}
			set
			{
				if ((this._DVT != value))
				{
					if (this._DVT1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDVTChanging(value);
					this.SendPropertyChanging();
					this._DVT = value;
					this.SendPropertyChanged("DVT");
					this.OnDVTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuongTon", DbType="Int")]
		public System.Nullable<int> SoLuongTon
		{
			get
			{
				return this._SoLuongTon;
			}
			set
			{
				if ((this._SoLuongTon != value))
				{
					this.OnSoLuongTonChanging(value);
					this.SendPropertyChanging();
					this._SoLuongTon = value;
					this.SendPropertyChanged("SoLuongTon");
					this.OnSoLuongTonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonGia", DbType="Money")]
		public System.Nullable<decimal> DonGia
		{
			get
			{
				return this._DonGia;
			}
			set
			{
				if ((this._DonGia != value))
				{
					this.OnDonGiaChanging(value);
					this.SendPropertyChanging();
					this._DonGia = value;
					this.SendPropertyChanged("DonGia");
					this.OnDonGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayCapNhat", DbType="Date")]
		public System.Nullable<System.DateTime> NgayCapNhat
		{
			get
			{
				return this._NgayCapNhat;
			}
			set
			{
				if ((this._NgayCapNhat != value))
				{
					this.OnNgayCapNhatChanging(value);
					this.SendPropertyChanging();
					this._NgayCapNhat = value;
					this.SendPropertyChanged("NgayCapNhat");
					this.OnNgayCapNhatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoTa", DbType="NVarChar(MAX)")]
		public string MoTa
		{
			get
			{
				return this._MoTa;
			}
			set
			{
				if ((this._MoTa != value))
				{
					this.OnMoTaChanging(value);
					this.SendPropertyChanging();
					this._MoTa = value;
					this.SendPropertyChanged("MoTa");
					this.OnMoTaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Images", DbType="NVarChar(50)")]
		public string Images
		{
			get
			{
				return this._Images;
			}
			set
			{
				if ((this._Images != value))
				{
					this.OnImagesChanging(value);
					this.SendPropertyChanging();
					this._Images = value;
					this.SendPropertyChanged("Images");
					this.OnImagesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SAN_PHAM_CHI_TIET_DON_DAT_HANG", Storage="_CHI_TIET_DON_DAT_HANGs", ThisKey="MaSP", OtherKey="MaSP")]
		public EntitySet<CHI_TIET_DON_DAT_HANG> CHI_TIET_DON_DAT_HANGs
		{
			get
			{
				return this._CHI_TIET_DON_DAT_HANGs;
			}
			set
			{
				this._CHI_TIET_DON_DAT_HANGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SAN_PHAM_CHI_TIET_PHIEU_GIAO_HANG", Storage="_CHI_TIET_PHIEU_GIAO_HANGs", ThisKey="MaSP", OtherKey="MaSP")]
		public EntitySet<CHI_TIET_PHIEU_GIAO_HANG> CHI_TIET_PHIEU_GIAO_HANGs
		{
			get
			{
				return this._CHI_TIET_PHIEU_GIAO_HANGs;
			}
			set
			{
				this._CHI_TIET_PHIEU_GIAO_HANGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SAN_PHAM_CT_HOA_DON", Storage="_CT_HOA_DONs", ThisKey="MaSP", OtherKey="MaSP")]
		public EntitySet<CT_HOA_DON> CT_HOA_DONs
		{
			get
			{
				return this._CT_HOA_DONs;
			}
			set
			{
				this._CT_HOA_DONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DVT_SAN_PHAM", Storage="_DVT1", ThisKey="DVT", OtherKey="MaDVT", IsForeignKey=true)]
		public DVT DVT1
		{
			get
			{
				return this._DVT1.Entity;
			}
			set
			{
				DVT previousValue = this._DVT1.Entity;
				if (((previousValue != value) 
							|| (this._DVT1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DVT1.Entity = null;
						previousValue.SAN_PHAMs.Remove(this);
					}
					this._DVT1.Entity = value;
					if ((value != null))
					{
						value.SAN_PHAMs.Add(this);
						this._DVT = value.MaDVT;
					}
					else
					{
						this._DVT = default(Nullable<int>);
					}
					this.SendPropertyChanged("DVT1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAI_SAN_PHAM_SAN_PHAM", Storage="_LOAI_SAN_PHAM", ThisKey="MaLoaiSP", OtherKey="MaLoaiSP", IsForeignKey=true)]
		public LOAI_SAN_PHAM LOAI_SAN_PHAM
		{
			get
			{
				return this._LOAI_SAN_PHAM.Entity;
			}
			set
			{
				LOAI_SAN_PHAM previousValue = this._LOAI_SAN_PHAM.Entity;
				if (((previousValue != value) 
							|| (this._LOAI_SAN_PHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOAI_SAN_PHAM.Entity = null;
						previousValue.SAN_PHAMs.Remove(this);
					}
					this._LOAI_SAN_PHAM.Entity = value;
					if ((value != null))
					{
						value.SAN_PHAMs.Add(this);
						this._MaLoaiSP = value.MaLoaiSP;
					}
					else
					{
						this._MaLoaiSP = default(Nullable<int>);
					}
					this.SendPropertyChanged("LOAI_SAN_PHAM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHI_TIET_DON_DAT_HANGs(CHI_TIET_DON_DAT_HANG entity)
		{
			this.SendPropertyChanging();
			entity.SAN_PHAM = this;
		}
		
		private void detach_CHI_TIET_DON_DAT_HANGs(CHI_TIET_DON_DAT_HANG entity)
		{
			this.SendPropertyChanging();
			entity.SAN_PHAM = null;
		}
		
		private void attach_CHI_TIET_PHIEU_GIAO_HANGs(CHI_TIET_PHIEU_GIAO_HANG entity)
		{
			this.SendPropertyChanging();
			entity.SAN_PHAM = this;
		}
		
		private void detach_CHI_TIET_PHIEU_GIAO_HANGs(CHI_TIET_PHIEU_GIAO_HANG entity)
		{
			this.SendPropertyChanging();
			entity.SAN_PHAM = null;
		}
		
		private void attach_CT_HOA_DONs(CT_HOA_DON entity)
		{
			this.SendPropertyChanging();
			entity.SAN_PHAM = this;
		}
		
		private void detach_CT_HOA_DONs(CT_HOA_DON entity)
		{
			this.SendPropertyChanging();
			entity.SAN_PHAM = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHI_TIET_PHIEU_GIAO_HANG")]
	public partial class CHI_TIET_PHIEU_GIAO_HANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaPGH;
		
		private int _MaSP;
		
		private System.Nullable<int> _DVT;
		
		private System.Nullable<decimal> _SoLuong;
		
		private System.Nullable<decimal> _DonGia;
		
		private System.Nullable<decimal> _ThanhTien;
		
		private EntityRef<SAN_PHAM> _SAN_PHAM;
		
		private EntityRef<DVT> _DVT1;
		
		private EntityRef<PHIEU_GIAO_HANG> _PHIEU_GIAO_HANG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaPGHChanging(int value);
    partial void OnMaPGHChanged();
    partial void OnMaSPChanging(int value);
    partial void OnMaSPChanged();
    partial void OnDVTChanging(System.Nullable<int> value);
    partial void OnDVTChanged();
    partial void OnSoLuongChanging(System.Nullable<decimal> value);
    partial void OnSoLuongChanged();
    partial void OnDonGiaChanging(System.Nullable<decimal> value);
    partial void OnDonGiaChanged();
    partial void OnThanhTienChanging(System.Nullable<decimal> value);
    partial void OnThanhTienChanged();
    #endregion
		
		public CHI_TIET_PHIEU_GIAO_HANG()
		{
			this._SAN_PHAM = default(EntityRef<SAN_PHAM>);
			this._DVT1 = default(EntityRef<DVT>);
			this._PHIEU_GIAO_HANG = default(EntityRef<PHIEU_GIAO_HANG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPGH", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaPGH
		{
			get
			{
				return this._MaPGH;
			}
			set
			{
				if ((this._MaPGH != value))
				{
					if (this._PHIEU_GIAO_HANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaPGHChanging(value);
					this.SendPropertyChanging();
					this._MaPGH = value;
					this.SendPropertyChanged("MaPGH");
					this.OnMaPGHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSP", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaSP
		{
			get
			{
				return this._MaSP;
			}
			set
			{
				if ((this._MaSP != value))
				{
					if (this._SAN_PHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSPChanging(value);
					this.SendPropertyChanging();
					this._MaSP = value;
					this.SendPropertyChanged("MaSP");
					this.OnMaSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DVT", DbType="Int")]
		public System.Nullable<int> DVT
		{
			get
			{
				return this._DVT;
			}
			set
			{
				if ((this._DVT != value))
				{
					if (this._DVT1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDVTChanging(value);
					this.SendPropertyChanging();
					this._DVT = value;
					this.SendPropertyChanged("DVT");
					this.OnDVTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Money")]
		public System.Nullable<decimal> SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonGia", DbType="Money")]
		public System.Nullable<decimal> DonGia
		{
			get
			{
				return this._DonGia;
			}
			set
			{
				if ((this._DonGia != value))
				{
					this.OnDonGiaChanging(value);
					this.SendPropertyChanging();
					this._DonGia = value;
					this.SendPropertyChanged("DonGia");
					this.OnDonGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThanhTien", DbType="Money")]
		public System.Nullable<decimal> ThanhTien
		{
			get
			{
				return this._ThanhTien;
			}
			set
			{
				if ((this._ThanhTien != value))
				{
					this.OnThanhTienChanging(value);
					this.SendPropertyChanging();
					this._ThanhTien = value;
					this.SendPropertyChanged("ThanhTien");
					this.OnThanhTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SAN_PHAM_CHI_TIET_PHIEU_GIAO_HANG", Storage="_SAN_PHAM", ThisKey="MaSP", OtherKey="MaSP", IsForeignKey=true)]
		public SAN_PHAM SAN_PHAM
		{
			get
			{
				return this._SAN_PHAM.Entity;
			}
			set
			{
				SAN_PHAM previousValue = this._SAN_PHAM.Entity;
				if (((previousValue != value) 
							|| (this._SAN_PHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SAN_PHAM.Entity = null;
						previousValue.CHI_TIET_PHIEU_GIAO_HANGs.Remove(this);
					}
					this._SAN_PHAM.Entity = value;
					if ((value != null))
					{
						value.CHI_TIET_PHIEU_GIAO_HANGs.Add(this);
						this._MaSP = value.MaSP;
					}
					else
					{
						this._MaSP = default(int);
					}
					this.SendPropertyChanged("SAN_PHAM");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DVT_CHI_TIET_PHIEU_GIAO_HANG", Storage="_DVT1", ThisKey="DVT", OtherKey="MaDVT", IsForeignKey=true)]
		public DVT DVT1
		{
			get
			{
				return this._DVT1.Entity;
			}
			set
			{
				DVT previousValue = this._DVT1.Entity;
				if (((previousValue != value) 
							|| (this._DVT1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DVT1.Entity = null;
						previousValue.CHI_TIET_PHIEU_GIAO_HANGs.Remove(this);
					}
					this._DVT1.Entity = value;
					if ((value != null))
					{
						value.CHI_TIET_PHIEU_GIAO_HANGs.Add(this);
						this._DVT = value.MaDVT;
					}
					else
					{
						this._DVT = default(Nullable<int>);
					}
					this.SendPropertyChanged("DVT1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIEU_GIAO_HANG_CHI_TIET_PHIEU_GIAO_HANG", Storage="_PHIEU_GIAO_HANG", ThisKey="MaPGH", OtherKey="MaPGH", IsForeignKey=true)]
		public PHIEU_GIAO_HANG PHIEU_GIAO_HANG
		{
			get
			{
				return this._PHIEU_GIAO_HANG.Entity;
			}
			set
			{
				PHIEU_GIAO_HANG previousValue = this._PHIEU_GIAO_HANG.Entity;
				if (((previousValue != value) 
							|| (this._PHIEU_GIAO_HANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHIEU_GIAO_HANG.Entity = null;
						previousValue.CHI_TIET_PHIEU_GIAO_HANGs.Remove(this);
					}
					this._PHIEU_GIAO_HANG.Entity = value;
					if ((value != null))
					{
						value.CHI_TIET_PHIEU_GIAO_HANGs.Add(this);
						this._MaPGH = value.MaPGH;
					}
					else
					{
						this._MaPGH = default(int);
					}
					this.SendPropertyChanged("PHIEU_GIAO_HANG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CT_HOA_DON")]
	public partial class CT_HOA_DON : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaHD;
		
		private int _MaSP;
		
		private System.Nullable<int> _DVT;
		
		private System.Nullable<decimal> _SoLuong;
		
		private System.Nullable<decimal> _DonGia;
		
		private System.Nullable<decimal> _ThanhTien;
		
		private EntityRef<SAN_PHAM> _SAN_PHAM;
		
		private EntityRef<DVT> _DVT1;
		
		private EntityRef<HOA_DON> _HOA_DON;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHDChanging(int value);
    partial void OnMaHDChanged();
    partial void OnMaSPChanging(int value);
    partial void OnMaSPChanged();
    partial void OnDVTChanging(System.Nullable<int> value);
    partial void OnDVTChanged();
    partial void OnSoLuongChanging(System.Nullable<decimal> value);
    partial void OnSoLuongChanged();
    partial void OnDonGiaChanging(System.Nullable<decimal> value);
    partial void OnDonGiaChanged();
    partial void OnThanhTienChanging(System.Nullable<decimal> value);
    partial void OnThanhTienChanged();
    #endregion
		
		public CT_HOA_DON()
		{
			this._SAN_PHAM = default(EntityRef<SAN_PHAM>);
			this._DVT1 = default(EntityRef<DVT>);
			this._HOA_DON = default(EntityRef<HOA_DON>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHD", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaHD
		{
			get
			{
				return this._MaHD;
			}
			set
			{
				if ((this._MaHD != value))
				{
					if (this._HOA_DON.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHDChanging(value);
					this.SendPropertyChanging();
					this._MaHD = value;
					this.SendPropertyChanged("MaHD");
					this.OnMaHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSP", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaSP
		{
			get
			{
				return this._MaSP;
			}
			set
			{
				if ((this._MaSP != value))
				{
					if (this._SAN_PHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSPChanging(value);
					this.SendPropertyChanging();
					this._MaSP = value;
					this.SendPropertyChanged("MaSP");
					this.OnMaSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DVT", DbType="Int")]
		public System.Nullable<int> DVT
		{
			get
			{
				return this._DVT;
			}
			set
			{
				if ((this._DVT != value))
				{
					if (this._DVT1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDVTChanging(value);
					this.SendPropertyChanging();
					this._DVT = value;
					this.SendPropertyChanged("DVT");
					this.OnDVTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Money")]
		public System.Nullable<decimal> SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonGia", DbType="Money")]
		public System.Nullable<decimal> DonGia
		{
			get
			{
				return this._DonGia;
			}
			set
			{
				if ((this._DonGia != value))
				{
					this.OnDonGiaChanging(value);
					this.SendPropertyChanging();
					this._DonGia = value;
					this.SendPropertyChanged("DonGia");
					this.OnDonGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThanhTien", DbType="Money")]
		public System.Nullable<decimal> ThanhTien
		{
			get
			{
				return this._ThanhTien;
			}
			set
			{
				if ((this._ThanhTien != value))
				{
					this.OnThanhTienChanging(value);
					this.SendPropertyChanging();
					this._ThanhTien = value;
					this.SendPropertyChanged("ThanhTien");
					this.OnThanhTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SAN_PHAM_CT_HOA_DON", Storage="_SAN_PHAM", ThisKey="MaSP", OtherKey="MaSP", IsForeignKey=true)]
		public SAN_PHAM SAN_PHAM
		{
			get
			{
				return this._SAN_PHAM.Entity;
			}
			set
			{
				SAN_PHAM previousValue = this._SAN_PHAM.Entity;
				if (((previousValue != value) 
							|| (this._SAN_PHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SAN_PHAM.Entity = null;
						previousValue.CT_HOA_DONs.Remove(this);
					}
					this._SAN_PHAM.Entity = value;
					if ((value != null))
					{
						value.CT_HOA_DONs.Add(this);
						this._MaSP = value.MaSP;
					}
					else
					{
						this._MaSP = default(int);
					}
					this.SendPropertyChanged("SAN_PHAM");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DVT_CT_HOA_DON", Storage="_DVT1", ThisKey="DVT", OtherKey="MaDVT", IsForeignKey=true)]
		public DVT DVT1
		{
			get
			{
				return this._DVT1.Entity;
			}
			set
			{
				DVT previousValue = this._DVT1.Entity;
				if (((previousValue != value) 
							|| (this._DVT1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DVT1.Entity = null;
						previousValue.CT_HOA_DONs.Remove(this);
					}
					this._DVT1.Entity = value;
					if ((value != null))
					{
						value.CT_HOA_DONs.Add(this);
						this._DVT = value.MaDVT;
					}
					else
					{
						this._DVT = default(Nullable<int>);
					}
					this.SendPropertyChanged("DVT1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOA_DON_CT_HOA_DON", Storage="_HOA_DON", ThisKey="MaHD", OtherKey="MaHD", IsForeignKey=true)]
		public HOA_DON HOA_DON
		{
			get
			{
				return this._HOA_DON.Entity;
			}
			set
			{
				HOA_DON previousValue = this._HOA_DON.Entity;
				if (((previousValue != value) 
							|| (this._HOA_DON.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HOA_DON.Entity = null;
						previousValue.CT_HOA_DONs.Remove(this);
					}
					this._HOA_DON.Entity = value;
					if ((value != null))
					{
						value.CT_HOA_DONs.Add(this);
						this._MaHD = value.MaHD;
					}
					else
					{
						this._MaHD = default(int);
					}
					this.SendPropertyChanged("HOA_DON");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DangNhap")]
	public partial class DangNhap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private string _Username;
		
		private string _Pass;
		
		private string _PhanQuyen;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(string value);
    partial void OnidChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPassChanging(string value);
    partial void OnPassChanged();
    partial void OnPhanQuyenChanging(string value);
    partial void OnPhanQuyenChanged();
    #endregion
		
		public DangNhap()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(50)")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pass", DbType="VarChar(MAX)")]
		public string Pass
		{
			get
			{
				return this._Pass;
			}
			set
			{
				if ((this._Pass != value))
				{
					this.OnPassChanging(value);
					this.SendPropertyChanging();
					this._Pass = value;
					this.SendPropertyChanged("Pass");
					this.OnPassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhanQuyen", DbType="VarChar(50)")]
		public string PhanQuyen
		{
			get
			{
				return this._PhanQuyen;
			}
			set
			{
				if ((this._PhanQuyen != value))
				{
					this.OnPhanQuyenChanging(value);
					this.SendPropertyChanging();
					this._PhanQuyen = value;
					this.SendPropertyChanged("PhanQuyen");
					this.OnPhanQuyenChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DON_DAT_HANG")]
	public partial class DON_DAT_HANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaDDH;
		
		private System.Nullable<System.DateTime> _NgayLapDon;
		
		private EntitySet<CHI_TIET_DON_DAT_HANG> _CHI_TIET_DON_DAT_HANGs;
		
		private EntitySet<PHIEU_GIAO_HANG> _PHIEU_GIAO_HANGs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDDHChanging(int value);
    partial void OnMaDDHChanged();
    partial void OnNgayLapDonChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayLapDonChanged();
    #endregion
		
		public DON_DAT_HANG()
		{
			this._CHI_TIET_DON_DAT_HANGs = new EntitySet<CHI_TIET_DON_DAT_HANG>(new Action<CHI_TIET_DON_DAT_HANG>(this.attach_CHI_TIET_DON_DAT_HANGs), new Action<CHI_TIET_DON_DAT_HANG>(this.detach_CHI_TIET_DON_DAT_HANGs));
			this._PHIEU_GIAO_HANGs = new EntitySet<PHIEU_GIAO_HANG>(new Action<PHIEU_GIAO_HANG>(this.attach_PHIEU_GIAO_HANGs), new Action<PHIEU_GIAO_HANG>(this.detach_PHIEU_GIAO_HANGs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDDH", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaDDH
		{
			get
			{
				return this._MaDDH;
			}
			set
			{
				if ((this._MaDDH != value))
				{
					this.OnMaDDHChanging(value);
					this.SendPropertyChanging();
					this._MaDDH = value;
					this.SendPropertyChanged("MaDDH");
					this.OnMaDDHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayLapDon", DbType="Date")]
		public System.Nullable<System.DateTime> NgayLapDon
		{
			get
			{
				return this._NgayLapDon;
			}
			set
			{
				if ((this._NgayLapDon != value))
				{
					this.OnNgayLapDonChanging(value);
					this.SendPropertyChanging();
					this._NgayLapDon = value;
					this.SendPropertyChanged("NgayLapDon");
					this.OnNgayLapDonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DON_DAT_HANG_CHI_TIET_DON_DAT_HANG", Storage="_CHI_TIET_DON_DAT_HANGs", ThisKey="MaDDH", OtherKey="MaDDH")]
		public EntitySet<CHI_TIET_DON_DAT_HANG> CHI_TIET_DON_DAT_HANGs
		{
			get
			{
				return this._CHI_TIET_DON_DAT_HANGs;
			}
			set
			{
				this._CHI_TIET_DON_DAT_HANGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DON_DAT_HANG_PHIEU_GIAO_HANG", Storage="_PHIEU_GIAO_HANGs", ThisKey="MaDDH", OtherKey="MaDDH")]
		public EntitySet<PHIEU_GIAO_HANG> PHIEU_GIAO_HANGs
		{
			get
			{
				return this._PHIEU_GIAO_HANGs;
			}
			set
			{
				this._PHIEU_GIAO_HANGs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHI_TIET_DON_DAT_HANGs(CHI_TIET_DON_DAT_HANG entity)
		{
			this.SendPropertyChanging();
			entity.DON_DAT_HANG = this;
		}
		
		private void detach_CHI_TIET_DON_DAT_HANGs(CHI_TIET_DON_DAT_HANG entity)
		{
			this.SendPropertyChanging();
			entity.DON_DAT_HANG = null;
		}
		
		private void attach_PHIEU_GIAO_HANGs(PHIEU_GIAO_HANG entity)
		{
			this.SendPropertyChanging();
			entity.DON_DAT_HANG = this;
		}
		
		private void detach_PHIEU_GIAO_HANGs(PHIEU_GIAO_HANG entity)
		{
			this.SendPropertyChanging();
			entity.DON_DAT_HANG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DVT")]
	public partial class DVT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaDVT;
		
		private string _TenDVT;
		
		private EntitySet<CHI_TIET_DON_DAT_HANG> _CHI_TIET_DON_DAT_HANGs;
		
		private EntitySet<SAN_PHAM> _SAN_PHAMs;
		
		private EntitySet<CHI_TIET_PHIEU_GIAO_HANG> _CHI_TIET_PHIEU_GIAO_HANGs;
		
		private EntitySet<CT_HOA_DON> _CT_HOA_DONs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDVTChanging(int value);
    partial void OnMaDVTChanged();
    partial void OnTenDVTChanging(string value);
    partial void OnTenDVTChanged();
    #endregion
		
		public DVT()
		{
			this._CHI_TIET_DON_DAT_HANGs = new EntitySet<CHI_TIET_DON_DAT_HANG>(new Action<CHI_TIET_DON_DAT_HANG>(this.attach_CHI_TIET_DON_DAT_HANGs), new Action<CHI_TIET_DON_DAT_HANG>(this.detach_CHI_TIET_DON_DAT_HANGs));
			this._SAN_PHAMs = new EntitySet<SAN_PHAM>(new Action<SAN_PHAM>(this.attach_SAN_PHAMs), new Action<SAN_PHAM>(this.detach_SAN_PHAMs));
			this._CHI_TIET_PHIEU_GIAO_HANGs = new EntitySet<CHI_TIET_PHIEU_GIAO_HANG>(new Action<CHI_TIET_PHIEU_GIAO_HANG>(this.attach_CHI_TIET_PHIEU_GIAO_HANGs), new Action<CHI_TIET_PHIEU_GIAO_HANG>(this.detach_CHI_TIET_PHIEU_GIAO_HANGs));
			this._CT_HOA_DONs = new EntitySet<CT_HOA_DON>(new Action<CT_HOA_DON>(this.attach_CT_HOA_DONs), new Action<CT_HOA_DON>(this.detach_CT_HOA_DONs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDVT", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaDVT
		{
			get
			{
				return this._MaDVT;
			}
			set
			{
				if ((this._MaDVT != value))
				{
					this.OnMaDVTChanging(value);
					this.SendPropertyChanging();
					this._MaDVT = value;
					this.SendPropertyChanged("MaDVT");
					this.OnMaDVTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDVT", DbType="NVarChar(50)")]
		public string TenDVT
		{
			get
			{
				return this._TenDVT;
			}
			set
			{
				if ((this._TenDVT != value))
				{
					this.OnTenDVTChanging(value);
					this.SendPropertyChanging();
					this._TenDVT = value;
					this.SendPropertyChanged("TenDVT");
					this.OnTenDVTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DVT_CHI_TIET_DON_DAT_HANG", Storage="_CHI_TIET_DON_DAT_HANGs", ThisKey="MaDVT", OtherKey="DVT")]
		public EntitySet<CHI_TIET_DON_DAT_HANG> CHI_TIET_DON_DAT_HANGs
		{
			get
			{
				return this._CHI_TIET_DON_DAT_HANGs;
			}
			set
			{
				this._CHI_TIET_DON_DAT_HANGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DVT_SAN_PHAM", Storage="_SAN_PHAMs", ThisKey="MaDVT", OtherKey="DVT")]
		public EntitySet<SAN_PHAM> SAN_PHAMs
		{
			get
			{
				return this._SAN_PHAMs;
			}
			set
			{
				this._SAN_PHAMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DVT_CHI_TIET_PHIEU_GIAO_HANG", Storage="_CHI_TIET_PHIEU_GIAO_HANGs", ThisKey="MaDVT", OtherKey="DVT")]
		public EntitySet<CHI_TIET_PHIEU_GIAO_HANG> CHI_TIET_PHIEU_GIAO_HANGs
		{
			get
			{
				return this._CHI_TIET_PHIEU_GIAO_HANGs;
			}
			set
			{
				this._CHI_TIET_PHIEU_GIAO_HANGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DVT_CT_HOA_DON", Storage="_CT_HOA_DONs", ThisKey="MaDVT", OtherKey="DVT")]
		public EntitySet<CT_HOA_DON> CT_HOA_DONs
		{
			get
			{
				return this._CT_HOA_DONs;
			}
			set
			{
				this._CT_HOA_DONs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHI_TIET_DON_DAT_HANGs(CHI_TIET_DON_DAT_HANG entity)
		{
			this.SendPropertyChanging();
			entity.DVT1 = this;
		}
		
		private void detach_CHI_TIET_DON_DAT_HANGs(CHI_TIET_DON_DAT_HANG entity)
		{
			this.SendPropertyChanging();
			entity.DVT1 = null;
		}
		
		private void attach_SAN_PHAMs(SAN_PHAM entity)
		{
			this.SendPropertyChanging();
			entity.DVT1 = this;
		}
		
		private void detach_SAN_PHAMs(SAN_PHAM entity)
		{
			this.SendPropertyChanging();
			entity.DVT1 = null;
		}
		
		private void attach_CHI_TIET_PHIEU_GIAO_HANGs(CHI_TIET_PHIEU_GIAO_HANG entity)
		{
			this.SendPropertyChanging();
			entity.DVT1 = this;
		}
		
		private void detach_CHI_TIET_PHIEU_GIAO_HANGs(CHI_TIET_PHIEU_GIAO_HANG entity)
		{
			this.SendPropertyChanging();
			entity.DVT1 = null;
		}
		
		private void attach_CT_HOA_DONs(CT_HOA_DON entity)
		{
			this.SendPropertyChanging();
			entity.DVT1 = this;
		}
		
		private void detach_CT_HOA_DONs(CT_HOA_DON entity)
		{
			this.SendPropertyChanging();
			entity.DVT1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HOA_DON")]
	public partial class HOA_DON : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaHD;
		
		private System.Nullable<int> _MaKH;
		
		private System.Nullable<System.DateTime> _NgayLapHD;
		
		private string _HinhThucThanhToan;
		
		private System.Nullable<decimal> _TongTien;
		
		private EntitySet<CT_HOA_DON> _CT_HOA_DONs;
		
		private EntityRef<KHACH_HANG> _KHACH_HANG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHDChanging(int value);
    partial void OnMaHDChanged();
    partial void OnMaKHChanging(System.Nullable<int> value);
    partial void OnMaKHChanged();
    partial void OnNgayLapHDChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayLapHDChanged();
    partial void OnHinhThucThanhToanChanging(string value);
    partial void OnHinhThucThanhToanChanged();
    partial void OnTongTienChanging(System.Nullable<decimal> value);
    partial void OnTongTienChanged();
    #endregion
		
		public HOA_DON()
		{
			this._CT_HOA_DONs = new EntitySet<CT_HOA_DON>(new Action<CT_HOA_DON>(this.attach_CT_HOA_DONs), new Action<CT_HOA_DON>(this.detach_CT_HOA_DONs));
			this._KHACH_HANG = default(EntityRef<KHACH_HANG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHD", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaHD
		{
			get
			{
				return this._MaHD;
			}
			set
			{
				if ((this._MaHD != value))
				{
					this.OnMaHDChanging(value);
					this.SendPropertyChanging();
					this._MaHD = value;
					this.SendPropertyChanged("MaHD");
					this.OnMaHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKH", DbType="Int")]
		public System.Nullable<int> MaKH
		{
			get
			{
				return this._MaKH;
			}
			set
			{
				if ((this._MaKH != value))
				{
					if (this._KHACH_HANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKHChanging(value);
					this.SendPropertyChanging();
					this._MaKH = value;
					this.SendPropertyChanged("MaKH");
					this.OnMaKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayLapHD", DbType="Date")]
		public System.Nullable<System.DateTime> NgayLapHD
		{
			get
			{
				return this._NgayLapHD;
			}
			set
			{
				if ((this._NgayLapHD != value))
				{
					this.OnNgayLapHDChanging(value);
					this.SendPropertyChanging();
					this._NgayLapHD = value;
					this.SendPropertyChanged("NgayLapHD");
					this.OnNgayLapHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HinhThucThanhToan", DbType="NVarChar(50)")]
		public string HinhThucThanhToan
		{
			get
			{
				return this._HinhThucThanhToan;
			}
			set
			{
				if ((this._HinhThucThanhToan != value))
				{
					this.OnHinhThucThanhToanChanging(value);
					this.SendPropertyChanging();
					this._HinhThucThanhToan = value;
					this.SendPropertyChanged("HinhThucThanhToan");
					this.OnHinhThucThanhToanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongTien", DbType="Money")]
		public System.Nullable<decimal> TongTien
		{
			get
			{
				return this._TongTien;
			}
			set
			{
				if ((this._TongTien != value))
				{
					this.OnTongTienChanging(value);
					this.SendPropertyChanging();
					this._TongTien = value;
					this.SendPropertyChanged("TongTien");
					this.OnTongTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOA_DON_CT_HOA_DON", Storage="_CT_HOA_DONs", ThisKey="MaHD", OtherKey="MaHD")]
		public EntitySet<CT_HOA_DON> CT_HOA_DONs
		{
			get
			{
				return this._CT_HOA_DONs;
			}
			set
			{
				this._CT_HOA_DONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACH_HANG_HOA_DON", Storage="_KHACH_HANG", ThisKey="MaKH", OtherKey="MaKH", IsForeignKey=true)]
		public KHACH_HANG KHACH_HANG
		{
			get
			{
				return this._KHACH_HANG.Entity;
			}
			set
			{
				KHACH_HANG previousValue = this._KHACH_HANG.Entity;
				if (((previousValue != value) 
							|| (this._KHACH_HANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHACH_HANG.Entity = null;
						previousValue.HOA_DONs.Remove(this);
					}
					this._KHACH_HANG.Entity = value;
					if ((value != null))
					{
						value.HOA_DONs.Add(this);
						this._MaKH = value.MaKH;
					}
					else
					{
						this._MaKH = default(Nullable<int>);
					}
					this.SendPropertyChanged("KHACH_HANG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CT_HOA_DONs(CT_HOA_DON entity)
		{
			this.SendPropertyChanging();
			entity.HOA_DON = this;
		}
		
		private void detach_CT_HOA_DONs(CT_HOA_DON entity)
		{
			this.SendPropertyChanging();
			entity.HOA_DON = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KHACH_HANG")]
	public partial class KHACH_HANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaKH;
		
		private string _TenKH;
		
		private string _DiaChi;
		
		private string _SDT;
		
		private string _Email;
		
		private string _IDLogin;
		
		private string _Pass;
		
		private EntitySet<HOA_DON> _HOA_DONs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKHChanging(int value);
    partial void OnMaKHChanged();
    partial void OnTenKHChanging(string value);
    partial void OnTenKHChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnIDLoginChanging(string value);
    partial void OnIDLoginChanged();
    partial void OnPassChanging(string value);
    partial void OnPassChanged();
    #endregion
		
		public KHACH_HANG()
		{
			this._HOA_DONs = new EntitySet<HOA_DON>(new Action<HOA_DON>(this.attach_HOA_DONs), new Action<HOA_DON>(this.detach_HOA_DONs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKH", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaKH
		{
			get
			{
				return this._MaKH;
			}
			set
			{
				if ((this._MaKH != value))
				{
					this.OnMaKHChanging(value);
					this.SendPropertyChanging();
					this._MaKH = value;
					this.SendPropertyChanged("MaKH");
					this.OnMaKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenKH", DbType="NVarChar(50)")]
		public string TenKH
		{
			get
			{
				return this._TenKH;
			}
			set
			{
				if ((this._TenKH != value))
				{
					this.OnTenKHChanging(value);
					this.SendPropertyChanging();
					this._TenKH = value;
					this.SendPropertyChanged("TenKH");
					this.OnTenKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(50)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="VarChar(50)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDLogin", DbType="VarChar(50)")]
		public string IDLogin
		{
			get
			{
				return this._IDLogin;
			}
			set
			{
				if ((this._IDLogin != value))
				{
					this.OnIDLoginChanging(value);
					this.SendPropertyChanging();
					this._IDLogin = value;
					this.SendPropertyChanged("IDLogin");
					this.OnIDLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pass", DbType="VarChar(50)")]
		public string Pass
		{
			get
			{
				return this._Pass;
			}
			set
			{
				if ((this._Pass != value))
				{
					this.OnPassChanging(value);
					this.SendPropertyChanging();
					this._Pass = value;
					this.SendPropertyChanged("Pass");
					this.OnPassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACH_HANG_HOA_DON", Storage="_HOA_DONs", ThisKey="MaKH", OtherKey="MaKH")]
		public EntitySet<HOA_DON> HOA_DONs
		{
			get
			{
				return this._HOA_DONs;
			}
			set
			{
				this._HOA_DONs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HOA_DONs(HOA_DON entity)
		{
			this.SendPropertyChanging();
			entity.KHACH_HANG = this;
		}
		
		private void detach_HOA_DONs(HOA_DON entity)
		{
			this.SendPropertyChanging();
			entity.KHACH_HANG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOAI_NV")]
	public partial class LOAI_NV : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaLoaiNV;
		
		private string _LoaiNV;
		
		private EntitySet<NHAN_VIEN> _NHAN_VIENs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLoaiNVChanging(int value);
    partial void OnMaLoaiNVChanged();
    partial void OnLoaiNVChanging(string value);
    partial void OnLoaiNVChanged();
    #endregion
		
		public LOAI_NV()
		{
			this._NHAN_VIENs = new EntitySet<NHAN_VIEN>(new Action<NHAN_VIEN>(this.attach_NHAN_VIENs), new Action<NHAN_VIEN>(this.detach_NHAN_VIENs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoaiNV", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaLoaiNV
		{
			get
			{
				return this._MaLoaiNV;
			}
			set
			{
				if ((this._MaLoaiNV != value))
				{
					this.OnMaLoaiNVChanging(value);
					this.SendPropertyChanging();
					this._MaLoaiNV = value;
					this.SendPropertyChanged("MaLoaiNV");
					this.OnMaLoaiNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoaiNV", DbType="NVarChar(50)")]
		public string LoaiNV
		{
			get
			{
				return this._LoaiNV;
			}
			set
			{
				if ((this._LoaiNV != value))
				{
					this.OnLoaiNVChanging(value);
					this.SendPropertyChanging();
					this._LoaiNV = value;
					this.SendPropertyChanged("LoaiNV");
					this.OnLoaiNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAI_NV_NHAN_VIEN", Storage="_NHAN_VIENs", ThisKey="MaLoaiNV", OtherKey="MaLoaiNV")]
		public EntitySet<NHAN_VIEN> NHAN_VIENs
		{
			get
			{
				return this._NHAN_VIENs;
			}
			set
			{
				this._NHAN_VIENs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NHAN_VIENs(NHAN_VIEN entity)
		{
			this.SendPropertyChanging();
			entity.LOAI_NV = this;
		}
		
		private void detach_NHAN_VIENs(NHAN_VIEN entity)
		{
			this.SendPropertyChanging();
			entity.LOAI_NV = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOAI_SAN_PHAM")]
	public partial class LOAI_SAN_PHAM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaLoaiSP;
		
		private string _TenLoai;
		
		private EntitySet<SAN_PHAM> _SAN_PHAMs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLoaiSPChanging(int value);
    partial void OnMaLoaiSPChanged();
    partial void OnTenLoaiChanging(string value);
    partial void OnTenLoaiChanged();
    #endregion
		
		public LOAI_SAN_PHAM()
		{
			this._SAN_PHAMs = new EntitySet<SAN_PHAM>(new Action<SAN_PHAM>(this.attach_SAN_PHAMs), new Action<SAN_PHAM>(this.detach_SAN_PHAMs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoaiSP", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaLoaiSP
		{
			get
			{
				return this._MaLoaiSP;
			}
			set
			{
				if ((this._MaLoaiSP != value))
				{
					this.OnMaLoaiSPChanging(value);
					this.SendPropertyChanging();
					this._MaLoaiSP = value;
					this.SendPropertyChanged("MaLoaiSP");
					this.OnMaLoaiSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLoai", DbType="NVarChar(50)")]
		public string TenLoai
		{
			get
			{
				return this._TenLoai;
			}
			set
			{
				if ((this._TenLoai != value))
				{
					this.OnTenLoaiChanging(value);
					this.SendPropertyChanging();
					this._TenLoai = value;
					this.SendPropertyChanged("TenLoai");
					this.OnTenLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAI_SAN_PHAM_SAN_PHAM", Storage="_SAN_PHAMs", ThisKey="MaLoaiSP", OtherKey="MaLoaiSP")]
		public EntitySet<SAN_PHAM> SAN_PHAMs
		{
			get
			{
				return this._SAN_PHAMs;
			}
			set
			{
				this._SAN_PHAMs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SAN_PHAMs(SAN_PHAM entity)
		{
			this.SendPropertyChanging();
			entity.LOAI_SAN_PHAM = this;
		}
		
		private void detach_SAN_PHAMs(SAN_PHAM entity)
		{
			this.SendPropertyChanging();
			entity.LOAI_SAN_PHAM = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NHAN_VIEN")]
	public partial class NHAN_VIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaNV;
		
		private string _TenNV;
		
		private string _SDT;
		
		private System.Nullable<int> _MaLoaiNV;
		
		private EntitySet<PHIEU_GIAO_HANG> _PHIEU_GIAO_HANGs;
		
		private EntityRef<LOAI_NV> _LOAI_NV;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNVChanging(int value);
    partial void OnMaNVChanged();
    partial void OnTenNVChanging(string value);
    partial void OnTenNVChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnMaLoaiNVChanging(System.Nullable<int> value);
    partial void OnMaLoaiNVChanged();
    #endregion
		
		public NHAN_VIEN()
		{
			this._PHIEU_GIAO_HANGs = new EntitySet<PHIEU_GIAO_HANG>(new Action<PHIEU_GIAO_HANG>(this.attach_PHIEU_GIAO_HANGs), new Action<PHIEU_GIAO_HANG>(this.detach_PHIEU_GIAO_HANGs));
			this._LOAI_NV = default(EntityRef<LOAI_NV>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNV", DbType="NVarChar(50)")]
		public string TenNV
		{
			get
			{
				return this._TenNV;
			}
			set
			{
				if ((this._TenNV != value))
				{
					this.OnTenNVChanging(value);
					this.SendPropertyChanging();
					this._TenNV = value;
					this.SendPropertyChanged("TenNV");
					this.OnTenNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="VarChar(50)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoaiNV", DbType="Int")]
		public System.Nullable<int> MaLoaiNV
		{
			get
			{
				return this._MaLoaiNV;
			}
			set
			{
				if ((this._MaLoaiNV != value))
				{
					if (this._LOAI_NV.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLoaiNVChanging(value);
					this.SendPropertyChanging();
					this._MaLoaiNV = value;
					this.SendPropertyChanged("MaLoaiNV");
					this.OnMaLoaiNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHAN_VIEN_PHIEU_GIAO_HANG", Storage="_PHIEU_GIAO_HANGs", ThisKey="MaNV", OtherKey="MaNV")]
		public EntitySet<PHIEU_GIAO_HANG> PHIEU_GIAO_HANGs
		{
			get
			{
				return this._PHIEU_GIAO_HANGs;
			}
			set
			{
				this._PHIEU_GIAO_HANGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAI_NV_NHAN_VIEN", Storage="_LOAI_NV", ThisKey="MaLoaiNV", OtherKey="MaLoaiNV", IsForeignKey=true)]
		public LOAI_NV LOAI_NV
		{
			get
			{
				return this._LOAI_NV.Entity;
			}
			set
			{
				LOAI_NV previousValue = this._LOAI_NV.Entity;
				if (((previousValue != value) 
							|| (this._LOAI_NV.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOAI_NV.Entity = null;
						previousValue.NHAN_VIENs.Remove(this);
					}
					this._LOAI_NV.Entity = value;
					if ((value != null))
					{
						value.NHAN_VIENs.Add(this);
						this._MaLoaiNV = value.MaLoaiNV;
					}
					else
					{
						this._MaLoaiNV = default(Nullable<int>);
					}
					this.SendPropertyChanged("LOAI_NV");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PHIEU_GIAO_HANGs(PHIEU_GIAO_HANG entity)
		{
			this.SendPropertyChanging();
			entity.NHAN_VIEN = this;
		}
		
		private void detach_PHIEU_GIAO_HANGs(PHIEU_GIAO_HANG entity)
		{
			this.SendPropertyChanging();
			entity.NHAN_VIEN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHIEU_GIAO_HANG")]
	public partial class PHIEU_GIAO_HANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaPGH;
		
		private System.Nullable<int> _MaDDH;
		
		private System.Nullable<int> _MaNV;
		
		private System.Nullable<System.DateTime> _NgayGiaoHang;
		
		private EntitySet<CHI_TIET_PHIEU_GIAO_HANG> _CHI_TIET_PHIEU_GIAO_HANGs;
		
		private EntityRef<DON_DAT_HANG> _DON_DAT_HANG;
		
		private EntityRef<NHAN_VIEN> _NHAN_VIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaPGHChanging(int value);
    partial void OnMaPGHChanged();
    partial void OnMaDDHChanging(System.Nullable<int> value);
    partial void OnMaDDHChanged();
    partial void OnMaNVChanging(System.Nullable<int> value);
    partial void OnMaNVChanged();
    partial void OnNgayGiaoHangChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayGiaoHangChanged();
    #endregion
		
		public PHIEU_GIAO_HANG()
		{
			this._CHI_TIET_PHIEU_GIAO_HANGs = new EntitySet<CHI_TIET_PHIEU_GIAO_HANG>(new Action<CHI_TIET_PHIEU_GIAO_HANG>(this.attach_CHI_TIET_PHIEU_GIAO_HANGs), new Action<CHI_TIET_PHIEU_GIAO_HANG>(this.detach_CHI_TIET_PHIEU_GIAO_HANGs));
			this._DON_DAT_HANG = default(EntityRef<DON_DAT_HANG>);
			this._NHAN_VIEN = default(EntityRef<NHAN_VIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPGH", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaPGH
		{
			get
			{
				return this._MaPGH;
			}
			set
			{
				if ((this._MaPGH != value))
				{
					this.OnMaPGHChanging(value);
					this.SendPropertyChanging();
					this._MaPGH = value;
					this.SendPropertyChanged("MaPGH");
					this.OnMaPGHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDDH", DbType="Int")]
		public System.Nullable<int> MaDDH
		{
			get
			{
				return this._MaDDH;
			}
			set
			{
				if ((this._MaDDH != value))
				{
					if (this._DON_DAT_HANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDDHChanging(value);
					this.SendPropertyChanging();
					this._MaDDH = value;
					this.SendPropertyChanged("MaDDH");
					this.OnMaDDHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="Int")]
		public System.Nullable<int> MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					if (this._NHAN_VIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayGiaoHang", DbType="Date")]
		public System.Nullable<System.DateTime> NgayGiaoHang
		{
			get
			{
				return this._NgayGiaoHang;
			}
			set
			{
				if ((this._NgayGiaoHang != value))
				{
					this.OnNgayGiaoHangChanging(value);
					this.SendPropertyChanging();
					this._NgayGiaoHang = value;
					this.SendPropertyChanged("NgayGiaoHang");
					this.OnNgayGiaoHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIEU_GIAO_HANG_CHI_TIET_PHIEU_GIAO_HANG", Storage="_CHI_TIET_PHIEU_GIAO_HANGs", ThisKey="MaPGH", OtherKey="MaPGH")]
		public EntitySet<CHI_TIET_PHIEU_GIAO_HANG> CHI_TIET_PHIEU_GIAO_HANGs
		{
			get
			{
				return this._CHI_TIET_PHIEU_GIAO_HANGs;
			}
			set
			{
				this._CHI_TIET_PHIEU_GIAO_HANGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DON_DAT_HANG_PHIEU_GIAO_HANG", Storage="_DON_DAT_HANG", ThisKey="MaDDH", OtherKey="MaDDH", IsForeignKey=true)]
		public DON_DAT_HANG DON_DAT_HANG
		{
			get
			{
				return this._DON_DAT_HANG.Entity;
			}
			set
			{
				DON_DAT_HANG previousValue = this._DON_DAT_HANG.Entity;
				if (((previousValue != value) 
							|| (this._DON_DAT_HANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DON_DAT_HANG.Entity = null;
						previousValue.PHIEU_GIAO_HANGs.Remove(this);
					}
					this._DON_DAT_HANG.Entity = value;
					if ((value != null))
					{
						value.PHIEU_GIAO_HANGs.Add(this);
						this._MaDDH = value.MaDDH;
					}
					else
					{
						this._MaDDH = default(Nullable<int>);
					}
					this.SendPropertyChanged("DON_DAT_HANG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHAN_VIEN_PHIEU_GIAO_HANG", Storage="_NHAN_VIEN", ThisKey="MaNV", OtherKey="MaNV", IsForeignKey=true)]
		public NHAN_VIEN NHAN_VIEN
		{
			get
			{
				return this._NHAN_VIEN.Entity;
			}
			set
			{
				NHAN_VIEN previousValue = this._NHAN_VIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHAN_VIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHAN_VIEN.Entity = null;
						previousValue.PHIEU_GIAO_HANGs.Remove(this);
					}
					this._NHAN_VIEN.Entity = value;
					if ((value != null))
					{
						value.PHIEU_GIAO_HANGs.Add(this);
						this._MaNV = value.MaNV;
					}
					else
					{
						this._MaNV = default(Nullable<int>);
					}
					this.SendPropertyChanged("NHAN_VIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHI_TIET_PHIEU_GIAO_HANGs(CHI_TIET_PHIEU_GIAO_HANG entity)
		{
			this.SendPropertyChanging();
			entity.PHIEU_GIAO_HANG = this;
		}
		
		private void detach_CHI_TIET_PHIEU_GIAO_HANGs(CHI_TIET_PHIEU_GIAO_HANG entity)
		{
			this.SendPropertyChanging();
			entity.PHIEU_GIAO_HANG = null;
		}
	}
}
#pragma warning restore 1591
